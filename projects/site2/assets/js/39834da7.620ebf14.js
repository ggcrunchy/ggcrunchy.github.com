"use strict";(self.webpackChunkggcrunchy_docs=self.webpackChunkggcrunchy_docs||[]).push([[5796],{3823:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=t(4848),r=t(8453);const a={sidebar_position:15},i=void 0,c={id:"plugins/list/parshapes",title:"parshapes",description:"Might have ByteReader stuff?",source:"@site/docs/plugins/list/parshapes.md",sourceDirName:"plugins/list",slug:"/plugins/list/parshapes",permalink:"/docs/plugins/list/parshapes",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/plugins/list/parshapes.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"pluginsSidebar",previous:{title:"octasphere",permalink:"/docs/plugins/list/octasphere"},next:{title:"quaternion",permalink:"/docs/plugins/list/quaternion"}},o={},l=[];function d(e){const s={code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"Might have ByteReader stuff?"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"FUNCS:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"        mesh = create_cone(slices, stacks)\n        mesh = create_cube()\n        mesh = create_cylinder(slices, stacks)\n        mesh = create_disk(radius, slices, {x, y, z}, {x, y, z}) -- string keys\n\t\tmesh = create_disk(radius, slices, cx, cy, cz, nx, ny, nz)\n\t\tmesh = create_dodecahedron()\n\t\tmesh = create_empty()\n        mesh = create_icosahedron()\n        mesh = create_octahedron()\n        mesh = create_hemisphere(slices, stacks)\n        mesh = create_klein_bottle(slices, stacks)\n        mesh = create_lsystem(text, slices, maxdepth)\n        mesh = create_parametric(callback, slices, stacks) -- x, y, z = callback(x, y)\n\t\tmesh = create_parametric_disk(slices, stacks)\n        mesh = create_parametric_sphere(slices, stacks)\n        mesh = create_plane(slices, stacks)\n        mesh = create_rock(seed, nsubdivisions)\n        mesh = create_subdivided_sphere(nsubdivisions)\n        mesh = create_torus(slices, stacks, radius)\n        mesh = create_tetrahedron()\n        mesh = create_trefoil_knot(slices, stacks, radius)\n\n        set_epsilon_welded_normals(value)\n        set_epsilon_degenerate_sphere(value)\n"})}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"METHODS:"}),"\n"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"\t\t    mesh = mesh:clone()\n\t\t\tminx, miny, minz, maxx, maxy, maxz = mesh:compute_aabb()\n\t\t\t\n            mesh:compute_normals()\n            mesh:free_mesh()\n            \n\t\t\tx, y, z = mesh:get_normal(index) -- 1-based\n            x, y, z = mesh:get_point(index)\n            count = mesh:get_point_count()\n\t\t\tu, v = mesh:get_texcoord(index)\n\t\t\tindex1, index2, index3 = mesh:get_triangle(index) -- ATM results zero-based...\n            count = mesh:get_triangle_count()\n\t\t\t\n\t\t\tmesh:invert(face_index, face_count)\n            mesh:merge(mesh2)\n\t\t\tmesh:merge_and_free(mesh2)\n            mesh:remove_degenerate(min_tri_area)\n            mesh:rotate(radians, axis) -- cf. create_disk\n\t\t\tmesh:rotate(radians, x, y, z)\n            mesh:scale(scale) -- cf. create_disk\n\t\t\tmesh:scale(x, y, z)\n            mesh:translate(translate) -- cf. create_disk\n\t\t\tmesh:translate(x, y, z)\n            mesh:unweld(create_indices) -- boolean\n\t\t\t\n\t\t\tmesh = mesh:weld(epsilon)\n\t\t\tmesh, mapping = mesh:weld(epsilon, true) -- mapping = #points size array of indices\n"})})]})}function m(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>i,x:()=>c});var n=t(6540);const r={},a=n.createContext(r);function i(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(a.Provider,{value:s},e.children)}}}]);