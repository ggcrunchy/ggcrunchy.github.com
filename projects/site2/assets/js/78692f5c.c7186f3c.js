"use strict";(self.webpackChunkggcrunchy_docs=self.webpackChunkggcrunchy_docs||[]).push([[4945],{4027:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var l=t(4848),o=t(8453);const r={sidebar_position:7},a=void 0,i={id:"plugins/list/libnoise",title:"libnoise",description:"Mostly follows the original API.",source:"@site/docs/plugins/list/libnoise.md",sourceDirName:"plugins/list",slug:"/plugins/list/libnoise",permalink:"/docs/plugins/list/libnoise",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/plugins/list/libnoise.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"pluginsSidebar",previous:{title:"impack",permalink:"/docs/plugins/list/impack"},next:{title:"libtess2",permalink:"/docs/plugins/list/libtess2"}},u={},d=[];function s(e){const n={code:"code",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.p,{children:"Mostly follows the original API."}),"\n",(0,l.jsx)(n.p,{children:"Rough docs:"}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"libnoise -"}),"\n"]}),"\n",(0,l.jsx)(n.hr,{}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"TYPES:"}),"\n",(0,l.jsx)(n.p,{children:"Quality:"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'\t\t"FAST", "STD", "BEST"\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"PROPERTY KEYS:"}),"\n",(0,l.jsx)(n.p,{children:"-- numbers:"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'\t\t"DEFAULT_BILLOW_FREQUENCY"\n\t\t"DEFAULT_BILLOW_LACUNARITY"\n\t\t"DEFAULT_BILLOW_PERSISTENCE"\n\t\t"DEFAULT_CONST_VALUE"\n\t\t"DEFAULT_CYLINDERS_FREQUENCY"\n\t\t"DEFAULT_EXPONENT"\n\t\t"DEFAULT_PERLIN_FREQUENCY"\n\t\t"DEFAULT_PERLIN_LACUNARITY"\n\t\t"DEFAULT_PERLIN_PERSISTENCE"\n\t\t"DEFAULT_RIDGED_FREQUENCY"\n\t\t"DEFAULT_RIDGED_LACUNARITY"\n\t\t"DEFAULT_ROTATE_X"\n\t\t"DEFAULT_ROTATE_Y"\n\t\t"DEFAULT_ROTATE_Z"\n\t\t"DEFAULT_BIAS"\n\t\t"DEFAULT_SCALE"\n\t\t"DEFAULT_SCALE_POINT_X"\n\t\t"DEFAULT_SCALE_POINT_Y"\n\t\t"DEFAULT_SCALE_POINT_Z"\n\t\t"DEFAULT_SELECT_EDGE_FALLOFF"\n\t\t"DEFAULT_SELECT_LOWER_BOUND"\n\t\t"DEFAULT_SELECT_UPPER_BOUND"\n\t\t"DEFAULT_SPHERES_FREQUENCY"\n\t\t"DEFAULT_TRANSLATE_POINT_X"\n\t\t"DEFAULT_TRANSLATE_POINT_Y"\n\t\t"DEFAULT_TRANSLATE_POINT_Z"\n\t\t"DEFAULT_TURBULENCE_FREQUENCY"\n\t\t"DEFAULT_TURBULENCE_POWER"\n\t\t"DEFAULT_VORONOI_DISPLACEMENT"\n\t\t"DEFAULT_VORONOI_FREQUENCY"\n'})}),"\n",(0,l.jsx)(n.p,{children:"-- integers:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'\t\t"DEFAULT_BILLOW_OCTAVE_COUNT"\n\t\t"DEFAULT_BILLOW_SEED"\n\t\t"BILLOW_MAX_OCTAVE"\n\t\t"DEFAULT_PERLIN_OCTAVE_COUNT"\n\t\t"DEFAULT_PERLIN_SEED"\n\t\t"PERLIN_MAX_OCTAVE"\n\t\t"DEFAULT_RIDGED_OCTAVE_COUNT"\n\t\t"DEFAULT_RIDGED_SEED"\n\t\t"RIDGED_MAX_OCTAVE"\n\t\t"DEFAULT_TURBULENCE_ROUGHNESS"\n\t\t"DEFAULT_TURBULENCE_SEED"\n\t\t"DEFAULT_VORONOI_SEED"\n'})}),"\n",(0,l.jsx)(n.p,{children:"-- qualities:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:'\t\t"DEFAULT_BILLOW_QUALITY"\n\t\t"DEFAULT_PERLIN_QUALITY"\n\t\t"DEFAULT_RIDGED_QUALITY"\n'})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"FUNCS:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tCylinderModel = CylinderModel([module])\n\tLineModel = LineModel([module])\n\tPlaneModel = PlaneModel([module])\n\tSphereModel = SphereModel([module])\n\n\tnumber / integer / quality = GetProperty(property_name)\n\n\tAbsModule = Abs()\n\tAddModule = Add()\n\tBillow = Billow()\n\tBlendModule = Blend()\n\tCacheModule = Cache()\n\tCheckerboardModule = Checkerboard()\n\tClampModule = Clamp()\n\tConstModule = Const()\n\tCurveModule = Curve()\n\tCylindersModule = Cylinders()\n\tDisplaceModule = Displace()\n\tExponentModule = Exponent()\n\tInvertModule = Invert()\n\tMaxModule = Max()\n\tMinModule = Min()\n\tMultiplyModule = Multiply()\n\tPerlinModule = Perlin()\n\tPowerModule = Power()\n\tRidgedMultiModule = RidgedMulti()\n\tRotatePointModule = RotatePoint()\n\tScaleBiasModule = ScaleBias()\n\tScalePointModule = ScalePoint()\n\tSelectModule = Select()\n\tSpheresModule = Spheres()\n\tTerraceModule = Terrace()\n\tTranslatePointModule = TranslatePoint()\n\tTurbulenceModule = Turbulence()\n\tVoronoiModule = Voronoi()\n\n    Color = Color()\n\tColor = Color(r, g, b[, a]) -- default 1 (all clamped to 0, 1)\n\tGradientColor = GradientColor()\n\tImage = Image() -- is external texture\n    NoiseMap = NoiseMap()\n    NoiseMapBuilderCylinder = NoiseMapBuilderCylinder()\n\tNoiseMapBuilderPlane = NoiseMapBuilderPlane()\n\tNoiseMapBuilderSphere = NoiseMapBuilderSphere()\n\tRendererImage = RendererImage()\n\tRendererNormalMap = RendererNormalMap()\n"})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"METHODS:"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tModule = Model:GetModule()\n\tModel:SetModule(Module)\n\n\tvalue = CylinderModel:GetValue(angle, height) -- number\n\n\tattenuate = LineModel:GetAttenuate() -- boolean)\n\tvalue = LineModel:GetValue(p)\n\n\tLineModel:SetAttenuate(attenuate) -- boolean\n\tLineModel:SetEndPoint(x, y, z)\n\tLineModel:SetStartPoint(x, y, z)\n\n\tvalue = PlaneModel:GetValue(x, z)\n\tvalue = SphereModel:GetValue(lat, lon)\n\n\tModule / nil = Module:GetSourceModule(index)\n\tcount = Module:GetSourceModuleCount()\n\tvalue = Module:GetValue(x, y, z)\n\n\tModule:SetSourceModule(index, Module)\n\n\tvalue = Noise1:GetFrequency() -- number\n\tvalue = Noise1:GetSeed() -- integer\n\n\tNoise1:SetFrequency(value)\n\tNoise1:SetSeed(value)\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- Noise2 includes Noise1"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tvalue = Noise2:GetLacunarity() -- number\n\tquality = Noise2:GetNoiseQuality()\n\tvalue = Noise2:GetOctaveCount() -- integer\n\n\tNoise2:SetLacunarity(value)\n\tNoise2:SetQuality(quality)\n\tNoise2:SetOctaveCount(value)\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- Noise3 includes Noise1 and Noise2"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tvalue = Noise3:GetPersistence() -- number\n\t\n\tNoise3:SetPersistence(value)\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- Billow is Noise3"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tModule = Blend:GetControlModule()\n\t\n\tBlend:SetControlModule(Module)\n\n\tvalue = Clamp:GetLowerBound() -- number\n\tvalue = Clamp:GetUpperBound()\n\n\tClamp:SetBounds(lower, upper)\n\n\tvalue = Const:GetConstValue() -- number\n\n\tConst:SetConstValue(value)\n\tCurve:AddControlPoint(input, output) -- numbers\n\tCurve:ClearAllControlPoints()\n\n\t{ point1, point2, ... } = Curve:GetControlPointArray() -- point = { inputValue = input, outputValue = output }\n\n\tvalue = Curve:GetControlPointCount() -- integer\n\tvalue = Cylinders:GetFrequency() -- number\n\n\tCylinders:SetFrequency(value)\n\n\tModule = Displace:GetXDisplaceModule()\n\tModule = Displace:GetYDisplaceModule()\n\tModule = Displace:GetZDisplaceModule()\n\n\tDisplace:SetDisplaceModules(Module, Module, Module)\n\tDisplace:SetXDisplaceModule(Module)\n\tDisplace:SetYDisplaceModule(Module)\n\tDisplace:SetZDisplaceModule(Module)\n\n\tvalue = Exponent:GetExponent() -- number\n\n\tExponent:SetExponent(value)\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- Perlin is Noise3\n-- RidgedMulti is Noise2"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tvalue = RotatePoint:GetXAngle() -- number\n\tvalue = RotatePoint:GetYAngle()\n\tvalue = RotatePoint:GetZAngle()\n\n\tRotatePoint:SetAngles(x, y, z)\n\tRotatePoint:SetXAngle(value)\n\tRotatePoint:SetYAngle(value)\n\tRotatePoint:SetZAngle(value)\n\n\tvalue = ScaleBias:GetBias() -- number\n\tvalue = ScaleBias:GetScale()\n\n\tScaleBias:SetBias(value)\n\tScaleBias:SetScale(value)\n\n\tvalue = ScalePoint:GetXScale() -- number\n\tvalue = ScalePoint:GetYScale()\n\tvalue = ScalePoint:GetZScale()\n\n\tScalePoint:SetScale(x, y, z)\n\tScalePoint:SetXScale(value)\n\tScalePoint:SetYScale(value)\n\tScalePoint:SetZScale(value)\n\n\tModule = Select:GetControlModule()\n\tvalue = Select:GetEdgeFalloff() -- number\n\tvalue = Select:GetLowerBound()\n\tvalue = Select:GetUpperBound()\n\n\tSelect:SetBounds(lower, upper)\n\tSelect:SetControlModule(Module)\n\tSelect:SetEdgeFalloff(value)\n\n\tvalue = Spheres:GetFrequency() -- number\n\n\tSpheres:SetFrequency(value)\n\tTerrace:AddControlPoint(value)\n\tTerrace:ClearAllControlPoints()\n\n\t{ value1, value2, ... } = Terrace:GetControlPointArray() -- numbers\n\n\tvalue = Terrace:GetControlPointCount() -- integer\n\n\tTerrace:InvertTerraces(enable) -- boolean\n\n\tis_inverted = Terrace:IsTerracesInverted() -- boolean\n\n\tTerrace:MakeControlPoints(value) -- integer\n\n\tvalue = TranslatePoint:GetXTranslation() -- number\n\tvalue = TranslatePoint:GetYTranslation()\n\tvalue = TranslatePoint:GetZTranslation()\n\n\tTranslatePoint:SetTranslation(x, y, z)\n\tTranslatePoint:SetXTranslation(value)\n\tTranslatePoint:SetYTranslation(value)\n\tTranslatePoint:SetZTranslation(value)\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- Turbulence includes Noise1"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tvalue = Turbulence:GetPower() -- number\n\tvalue = Turbulence:GetRoughnessCount() -- integer\n\n\tTurbulence:SetPower(value)\n\tTurbulence:SetRoughness(value)\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- Voronoi includes Noise1"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tVoronoi:EnableDistance(enable) -- boolean\n\n\tvalue = Voronoi:GetDisplacement() -- number\n\tis_enabled = Voronoi:IsDistanceEnabled() -- boolean\n\n\tVoronoi:SetDisplacement(value)\n\n\tGradientColor:AddGradientPoint(pos, Color) -- number\n\tGradientColor:Clear()\n\n\tColor = GradientColor:GetColor(pos) -- number\n\t\n\tstr = GradientColor:GetBytes() -- n * sizeof(GradientPoint)\n\tcount = GradientColor:GetGradientPointCount()\n\n\tImage:Clear(Color)\n\n\tColor = Image:GetBorderValue()\n\n\tbytes = Image:GetBytes()\n\tbytes = Image:GetBytes(row)\n\tbytes = Image:GetBytes(x, y)\n\theight = Image:GetHeight()\n\tstride = Image:GetStride()\n\tColor = Image:GetValue(x, y)\n\twidth = Image:GetWidth()\n\n\tImage:SetBorderValue(Color)\n\tImage:SetSize(w, h)\n\tImage:SetValue(x, y, Color)\n\n\tNoiseMap:Clear(value) -- number\n\n\tvalue = NoiseMap:GetBorderValue()\n\tbytes = NoiseMap:GetBytes()\n\tbytes = NoiseMap:GetBytes(row)\n\tbytes = NoiseMap:GetBytes(x, y)\n\theight = NoiseMap:GetHeight()\n\tstride = NoiseMap:GetStride()\n\tvalue = NoiseMap:GetValue(x, y)\n\twidth = NoiseMap:GetWidth()\n\n\tImage:SetBorderValue(value)\n\tImage:SetSize(w, h)\n\tImage:SetValue(x, y, value)\n\n\tNoiseMapBuilder:Build()\n\n\theight = NoiseMapBuilder:GetDestHeight()\n\twidth = NoiseMapBuilder:GetDestWidth()\n\n\tNoiseMapBuilder:SetBounds(a, b, c, d) -- numbers\n"})}),"\n",(0,l.jsx)(n.p,{children:"-- meaning of a, b, c, d:\n-- cylinder: lowerAngleBound, upperAngleBound, lowerHeightBound, upperHeightBound\n-- plane: lowerXBound, upperXBound, lowerZBound, upperZBound\n-- sphere: southLatBound, northLatBound, westLonBound, eastLonBound"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"\tNoiseMapBuilder:SetDestNoiseMap(NoiseMap)\n\tNoiseMapBuilder:SetDestSize(w, h)\n\tNoiseMap:SetSourceModule(module)\n\n\tvalue = NoiseMapBuilderCylinder:GetLowerAngleBound()\n\tvalue = NoiseMapBuilderCylinder:GetLowerHeightBound()\n\tvalue = NoiseMapBuilderCylinder:GetUpperAngleBound()\n\tvalue = NoiseMapBuilderCylinder:GetUpperHeightBound()\n\n\tNoiseMapBuilderPlane:EnableSeamless(seamless) -- boolean, default true (bug: wrong index)\n\n\tvalue = NoiseMapBuilderPlane:GetLowerXBound()\n\tvalue = NoiseMapBuilderPlane:GetLowerZBound()\n\tvalue = NoiseMapBuilderPlane:GetUpperXBound()\n\tvalue = NoiseMapBuilderPlane:GetUpperZBound()\n\tis_seamless = NoiseMapBuilderPlane:IsSeamlessEnabled()\n\n\tvalue = NoiseMapBuilderSphere:GetEastLonBound()\n\tvalue = NoiseMapBuilderSphere:GetNorthLatBound()\n\tvalue = NoiseMapBuilderSphere:GetSouthLatBound()\n\tvalue = NoiseMapBuilderSphere:GetWestLonBound()\n\n\tRenderer:EnableWrap(wrap) -- boolean, default true\n\n\tis_wrap = Renderer:IsWrapEnabled()\n\n\tRenderer:Render()\n\tRenderer:SetDestImage(Image)\n\tRenderer:SetSourceNoiseMap(NoiseMap)\n\n\tRendererImage:AddGradientPoint(pos, Color) -- number\n\tRendererImage:BuildGrayscaleGradient()\n\tRendererImage:BuildTerrainGradient()\n\tRendererImage:ClearGradient()\n\tRendererImage:EnableLight) -- boolean, default true\n\n\tvalue = RendererImage:GetLightAzimuth()\n\tvalue = RendererImage:GetLightLightBrightness()\n\tColor = RendererImage:GetLightColor()\n\tvalue = RendererImage:GetLightContrast()\n\tvalue = RendererImage:GetLightElev()\n\tvalue = RendererImage:GetLightIntensity()\n\tis_enabled = RendererImage:IsLightEnabled()\n\n\tRendererImage:SetBackgroundImage(Image)\n\tRendererImage:SetLightAzimuth(value)\n\tRendererImage:SetLightBrightness(value)\n\tRendererImage:SetLightColor(Color)\n\tRendererImage:SetLightContrast(value)\n\tRendererImage:SetLightElev(value)\n\tRendererImage:SetLightIntensity(value)\n\n\tvalue = RendererNormalMap:GetBumpHeight()\n    RendererNormalMap:SetBumpHeight(value)\n"})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(s,{...e})}):s(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var l=t(6540);const o={},r=l.createContext(o);function a(e){const n=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),l.createElement(r.Provider,{value:n},e.children)}}}]);